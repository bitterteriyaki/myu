[tool.poetry]
name = "myu"
version = "0.13.0"
description = "Multipurpose bot for Discord written in Python."
authors = ["kyomi <me@kyomi.dev>"]
license = "AGPL-3.0-only"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.7"
rich = "^13.7.1"
discord-py = "^2.4.0"
jishaku = {git = "https://github.com/Gorialis/jishaku.git"}
sqlalchemy = {extras = ["asyncio", "mypy"], version = "^2.0.32"}
alembic = "^1.13.2"
asyncpg = "^0.29.0"
humanize = "^4.10.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
commitizen = "^3.28.0"

[tool.ruff]
# Ruff configuration:
# https://docs.astral.sh/ruff
required-version = "0.5.5"
target-version = "py312"

show-fixes = true
preview =  true
output-format = "full"

fix = true
line-length = 79

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "ANN",
    "ASYNC",
    "BLE",
    "FBT",
    "S",
    "B",
    "A",
    "CPY",
    "C4",
    "DTZ",
    "T10",
    "FA",
    "LOG",
    "G",
    "INP",
    "PIE",
    "SLF",
    "SLOT",
    "SIM",
    "PTH",
    "TD",
    "FIX",
    "PERF",
    "DOC",
    "RUF",
]

ignore = ["ANN401"]

[tool.ruff.lint.per-file-ignores]
"bot/extensions/**.py" = ["INP001", "S311"]
"bot/extensions/lootboxes.py" = ["UP041"]
"migrations/versions/**.py" = ["CPY001", "INP001"]

[tool.ruff.lint.pycodestyle]
# pycodestyle configuration:
# https://docs.astral.sh/ruff/settings/#pycodestyle
max-doc-length = 72
max-line-length = 79

[tool.ruff.lint.mccabe]
# mccabe configuration:
# https://docs.astral.sh/ruff/settings/#mccabe
max-complexity = 6

[tool.ruff.lint.pydocstyle]
# pydocstyle configuration:
# https://docs.astral.sh/ruff/settings/#pydocstyle
convention = "numpy"

[tool.ruff.lint.flake8-copyright]
# flake8-copyright configuration:
# https://docs.astral.sh/ruff/settings/#flake8-copyright
notice-rgx = "(?i)Copyright \\(C\\) 2024-present kyomi"

[tool.mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/stable/config_file.html
strict = true
pretty = true

disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.commitizen]
# Commitizen configuration:
# https://commitizen-tools.github.io/commitizen/config/
name = "cz_conventional_commits"
gpg_sign = true
tag_format = "$version"
version_scheme = "semver2"
version_provider = "poetry"
update_changelog_on_bump = true
template = "templates/changelog.j2"
bump_message = "bump: bump version to $new_version"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
